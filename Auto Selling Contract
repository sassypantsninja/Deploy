const Web3 = require('web3');
require('dotenv').config();

const web3 = new Web3(new Web3.providers.HttpProvider(process.env.INFURA_URL));

const account = web3.eth.accounts.privateKeyToAccount(process.env.PRIVATE_KEY);
web3.eth.accounts.wallet.add(account);

const bytecode = 'YOUR_CONTRACT_BYTECODE';
const abi = JSON.parse('YOUR_CONTRACT_ABI');
const tokenAddress = 'YOUR_TOKEN_ADDRESS'; // Replace with your token address
const uniswapRouterAddress = 'YOUR_UNISWAP_ROUTER_ADDRESS'; // Replace with Uniswap router address
const sellPriceThreshold = web3.utils.toWei('1', 'ether'); // Example price threshold in wei

(async () => {
    const contract = new web3.eth.Contract(abi);
    const deployTx = contract.deploy({ data: bytecode, arguments: [tokenAddress, uniswapRouterAddress, sellPriceThreshold] });

    const gas = await deployTx.estimateGas();
    const gasPrice = await web3.eth.getGasPrice();

    const deploy = await deployTx.send({
        from: account.address,
        gas,
        gasPrice,
    });

    console.log('Contract deployed at address:', deploy.options.address);
})();
